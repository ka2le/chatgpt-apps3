javascript:(function() {!function(){function e(e,t,n){var o=document.getElementsByTagName("head")[0],i=document.createElement("script");i.type="text/javascript",i.onerror=function(){var e;t&&((e=document.createElement("script")).type="text/javascript",e.src=t,e.onreadystatechange=n,e.onload=n,o.appendChild(e))},i.src=e,i.onreadystatechange=n,i.onload=n,o.appendChild(i)}console.log("GPT MAIN: 1685815561037");var t="http://localhost:3000/chatgpt-apps3/bookmarklets/min/utils.min.js?"+(new Date).getTime(),n="https://ka2le.github.io/chatgpt-apps3/bookmarklets/min/utils.min.js?"+(new Date).getTime();e("https://unpkg.com/preact@latest/dist/preact.umd.js",null,function(){e("https://unpkg.com/htm@latest/dist/htm.umd.js",null,function(){e("https://unpkg.com/preact@latest/hooks/dist/hooks.umd.js",null,function(){window.h=preact.h,window.render=preact.render,window.html=htm.bind(h),window.useState=preactHooks.useState,window.useEffect=preactHooks.useEffect,window.useRef=preactHooks.useRef,window.useMemo=preactHooks.useMemo,e(t,n,function(){{var n=window.render,f=window.html,v=window.useState,y=window.useEffect,w=window.useRef,T=window.useMemo;function b(){for(var e=document.getElementsByTagName("main")[0].getElementsByTagName("ol"),t=0;t<e.length;t++)for(var n,o,i,l=e[t].getElementsByTagName("li"),a=0;a<l.length;a++)l[a].classList.contains("has-checkbox")||((n=document.createElement("input")).type="checkbox",o=a+1,i=l[a].innerHTML.replace(/<[^>]*>?/gm,""),n.dataset.listText="Option "+o+": "+i,l[a].style.display="flex",l[a].style.alignItems="center",l[a].insertBefore(n,l[a].firstChild),l[a].classList.add("has-checkbox"))}const C=["STR","DEX","CON","INT","WIS","CHA"],S=[-2,-1,0,1,2,3,4,5];function $({abilities:e,style:t="",scores:n=[]}){return f`
                <div style="${t}" class="statBlock">
                    ${e.map(function(e){return f`<${function({name:e,scores:t=[]}){return f`
                <div style="${utilVars.abilityStyle}" class="ability">
                    <span>${e}</span>
                    <${Checkbox} id="${e}Checkbox" />
                    <${Dropdown} id="${e}Dropdown" options=${t} />
                </div>
            `}} name=${e} scores=${n} />`})}
                </div>
            `}function E(){var e=document.getElementById("codeBox").value;console.log(e),runJs(e)}function e(e){var t=Math.floor(20*Math.random())+1,n=function(e){for(var t=0;t<e.length;t++)if(e[t].checked)return e[t].dataset.listText;return""}(0<(n=document.getElementsByTagName("main")[0].getElementsByTagName("ol")).length?n[n.length-1].getElementsByTagName("input"):[]);console.log(t),console.log(n),console.log("setTest"),e(n+` 
Result: ${t+4} (${t+4} Roll + 1 INT +3 Proficiency)`)}function x(){document.querySelectorAll("button:not([gpt-enhancer-modified])").forEach(function(e){var t;e.innerText.includes("Copy code")&&(e.setAttribute("gpt-enhancer-modified","true"),t=e.innerText.replace("Copy code","Copy"),e.setAttribute("innerHtml",t),t=document.createElement("div"),n(f`<${RunJsButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling),t=document.createElement("div"),n(f`<${DownloadSVGButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling),t=document.createElement("div"),n(f`<${ToggleEditableButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling))})}function k(e){const[t,n]=v();return f`
                <div id="overAll" style=${{display:e.isOverlayOpen?"block":"none",...utilVars.overlayStyle}}>
                <${TextArea} id="overAllText" value=${t} onChange=${e=>n(e.target.value)}/>
                ${Button("Send Message",function(){e.sendText(t)})}
                ${Button("Toggle Overlay",function(){e.toggleOverlay()})}
                <div id="overAllAnswers"></div>
                </div>
            `}function B(n){return f`
        <div 
            id="toolBar" >
            ${Button("Correction",function(){n.setAdditionalText(`When giving the answer, keep this in mind:
I am using Preact and Htm in this Bookmarklet code. The main app i the function TheApp and i want to keep most states in that parent 
Always do comments in the code like /*COMMENT HERE*/ never do // like //COMMENT HERE  `)})}
            ${Button("RollD20",function(){var e,t;e=n.setAdditionalText,t=Math.floor(20*Math.random())+1,e(`Result: ${t+4} (${t+4} Roll + 1 INT +3 Proficiency)`)})}
            ${Button("RollD20_V2",function(){e(n.setAdditionalText)})}
            ${Button("RunJS",E)}
            ${Button("Toggle Overlay",function(){n.toggleOverlay()})}
            ${Button("Toolwindow",function(){n.toggleToolWindow()})}
            ${Button("SendTest",function(){n.sendText("Tell me something interesting")})}
            
            </div>
    `}var t=function(){const[e,t]=v(!1),[n,o]=v(!1),[i,l]=v(!1),[a,r]=v(!1);var[,,]=v("");const s=w(null),d=w(null),c=e=>{var t;s.current&&(t=s.current.value.replace(/\[.*?\]/s,""),s.current.value=t+"["+e+"]",s.current.dispatchEvent(new Event("input",{bubbles:!0})))},u=()=>{d.current&&"BUTTON"===d.current.tagName&&(d.current.disabled=!1,d.current.click())},m=(y(()=>{c(a)},[a]),()=>{o(!n)}),[g,p]=v(!1);var h=T(()=>({toggleOverlay:m,isOverlayOpen:n,toggleToolWindow:()=>{l(!i)},isToolWindowVisible:i,setAdditionalText:r,haveRemoved:e,setHaveRemoved:t,triggerRender:g,textAreaRef:s,sendButtonRef:d,insertTextInPrompt:c,sendText:e=>{console.log("Sending"+e),c(e),u()},pressSend:u}),[m,n,e,t,g,i,l,s,d]);return useComponentContainer(B,findToolBarContainerDOM,h),useComponentContainer(k,findOverlayContainerDOM,h),y(()=>{s.current=document.getElementById("prompt-textarea"),d.current=document.getElementById("prompt-textarea").nextElementSibling},[]),y(function(){removeElementsByClass("gpt-enhancer",e,t),x(),b(),addObserver([function(){x()},function(){b()},function(){addStyling()},function(){p(e=>!e)}]),addStyling()},[e,p,g]),f`<${function(e){return console.log(e),console.log(e.isToolWindowVisible),f`
                <div 
                style=${{display:e.isToolWindowVisible?"block":"none",...utilVars.toolWindowStyle}}
                    id="toolWindow"
                    class="group gpt-enhancer w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 dark:bg-gray-800">
                    <${$} abilities=${C} scores=${S} /><br></br>
                    <div><h2>toolWindow</h2></div>
                    <${TextArea}
                        id="codeBox"
                        class="flex flex-col w-full py-[10px] flex-grow md:py-4 md:pl-4 relative border border-black/10 bg-white dark:border-gray-900/50 dark:text-white dark:bg-gray-700 rounded-xl shadow-xs dark:shadow-xs"
                        style=""
                    />${Button("RunJS",E)}
                </div>
            `}} ...${h} />`},o="gpt-enhancer-root",i=(i=o,(i=document.getElementById(i))&&i.remove(),document.createElement("div"));i.id=o,document.body.appendChild(i),n(f`<${t} />`,i)}})})})})}();})();