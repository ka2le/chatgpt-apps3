javascript:(function() {!function(){function e(e,t,n){var o=document.getElementsByTagName("head")[0],a=document.createElement("script");a.type="text/javascript",a.onerror=function(){var e;t&&((e=document.createElement("script")).type="text/javascript",e.src=t,e.onreadystatechange=n,e.onload=n,o.appendChild(e))},a.src=e,a.onreadystatechange=n,a.onload=n,o.appendChild(a)}console.log("GPT MAIN: 1685824556788");var t="http://localhost:3000/chatgpt-apps3/bookmarklets/min/utils.min.js?"+(new Date).getTime(),n="https://ka2le.github.io/chatgpt-apps3/bookmarklets/min/utils.min.js?"+(new Date).getTime();e("https://unpkg.com/preact@latest/dist/preact.umd.js",null,function(){e("https://unpkg.com/htm@latest/dist/htm.umd.js",null,function(){e("https://unpkg.com/preact@latest/hooks/dist/hooks.umd.js",null,function(){window.h=preact.h,window.render=preact.render,window.html=htm.bind(h),window.useState=preactHooks.useState,window.useEffect=preactHooks.useEffect,window.useRef=preactHooks.useRef,window.useMemo=preactHooks.useMemo,e(t,n,function(){n=window.render,$=window.html,E=window.useState,x=window.useEffect,k=window.useRef,B=window.useMemo;var n,$,E,x,k,B,e=function(){const[e,t]=E(!1),[n,o]=E("DND"),[a,i]=E(!1),[l,r]=E("DND"!=n),[d,s]=E(""),c=k(null),u=k(null),m=["STR","DEX","CON","INT","WIS","CHA"],p=[-2,-1,0,1,2,3,4,5],[g,h]=E({STR:0,DEX:0,CON:0,INT:0,WIS:0,CHA:0}),y=e=>{var t;c.current&&(t=c.current.value.replace(/\[.*?\]/s,""),c.current.value=t+"["+e+"]",c.current.dispatchEvent(new Event("input",{bubbles:!0})))},v=()=>{u.current&&"BUTTON"===u.current.tagName&&(u.current.disabled=!1,u.current.click())},f=(x(()=>{y(d)},[d]),()=>{i(!a)}),[b,w]=E(!1);var T=B(()=>({standardAbilities:m,standardScoreOptions:p,toggleOverlay:f,isOverlayOpen:a,toggleToolWindow:()=>{r(!l)},isToolWindowVisible:l,setAdditionalText:s,mode:n,setMode:o,addToAddtionalText:e=>{s(d+e)},haveRemoved:e,setHaveRemoved:t,triggerRender:b,textAreaRef:c,sendButtonRef:u,insertTextInPrompt:y,sendText:e=>{console.log("Sending"+e),y(e),v()},pressSend:v,abilityScores:g,setAbilityScores:h}),[f,a,e,t,b,l,r,c,u,g]);return useComponentContainer(R,findToolBarContainerDOM,T),useComponentContainer(O,findOverlayContainerDOM,T),x(()=>{c.current=document.getElementById("prompt-textarea"),u.current=document.getElementById("prompt-textarea").nextElementSibling},[]),x(function(){removeElementsByClass("gpt-enhancer",e,t),C(),S(),addObserver([function(){C()},function(){S()},function(){addStyling()},function(){w(e=>!e)}]),addStyling()},[e,w,b]),$`<${function(e){return console.log(e),console.log(e.isToolWindowVisible),$`
                <div 
                style=${{display:e.isToolWindowVisible?"block":"none",...utilVars.toolWindowStyle}}
                    id="toolWindow"
                    class="gpt-enhancer group  w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 dark:bg-gray-800">
                    <div><h2>toolWindow</h2></div>
                    <${TextArea}
                        id="codeBox"
                        class="flex flex-col w-full py-[10px] flex-grow md:py-4 md:pl-4 relative border border-black/10 bg-white dark:border-gray-900/50 dark:text-white dark:bg-gray-700 rounded-xl shadow-xs dark:shadow-xs"
                        style=""
                    />${Button("RunJS",A)}
                </div>
            `}} ...${T} />`},t="gpt-enhancer-root",o=(o=t,(o=document.getElementById(o))&&o.remove(),document.createElement("div"));function S(){for(var e=document.getElementsByTagName("main")[0].getElementsByTagName("ol"),t=0;t<e.length;t++)for(var n,o,a,i=e[t].getElementsByTagName("li"),l=0;l<i.length;l++)i[l].classList.contains("has-checkbox")||((n=document.createElement("input")).type="checkbox",o=l+1,a=i[l].innerHTML.replace(/<[^>]*>?/gm,""),n.dataset.listText="Option "+o+": "+a,i[l].style.display="flex",i[l].style.alignItems="center",i[l].insertBefore(n,i[l].firstChild),i[l].classList.add("has-checkbox"))}function A(){var e=document.getElementById("codeBox").value;console.log(e),runJs(e)}function a(e,t){var n=Math.floor(20*Math.random())+1,o=function(e){for(var t=0;t<e.length;t++)if(e[t].checked)return e[t].dataset.listText;return""}(0<(i=document.getElementsByTagName("main")[0].getElementsByTagName("ol")).length?i[i.length-1].getElementsByTagName("input"):[]);let a;t.forEach(e=>{o.includes("("+e+")")&&(a=e)});var i=parseInt(document.getElementById(a+"Dropdown")?.value??0),t=null!=a?-1<i?" + "+i+" "+a:i+" "+a:"",i=n+parseInt(i);e(o+` Result: ${i} (${n} Roll ${t})`)}function C(){document.querySelectorAll("button:not([gpt-enhancer-modified])").forEach(function(e){var t;e.innerText.includes("Copy code")&&(e.setAttribute("gpt-enhancer-modified","true"),t=e.innerText.replace("Copy code","Copy"),e.setAttribute("innerHtml",t),t=document.createElement("div"),n($`<${RunJsButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling),t=document.createElement("div"),n($`<${DownloadSVGButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling),t=document.createElement("div"),n($`<${ToggleEditableButton} spanElement=${e}/>`,t),addElement(e.parentElement,t,e.nextSibling))})}function O(e){const[t,n]=E();return $`
                <div class="gpt-enhancer" id="overAll" style=${{display:e.isOverlayOpen?"block":"none",...utilVars.overlayStyle}}>
                <${TextArea} id="overAllText" value=${t} onChange=${e=>n(e.target.value)}/>
                ${Button("Send Message",function(){e.sendText(t)})}
                ${Button("Toggle Overlay",function(){e.toggleOverlay()})}
                <div id="overAllAnswers"></div>
                </div>
            `}function i(e){return"DND"==e.mode||"ALL"==e.mode?$`
            <${function(t){return $`
              <div class="statBlock">
                ${t.standardAbilities.map(e=>$`<${function({ability:e,...t}){return $`
              <div style="${utilVars.abilityStyle}" class="ability">
                <span>${e} </span>
                <${function({ability:n,options:e=[],value:t,setValue:o}){return $`
              <select class="gpt-enhancer" id="${n}Dropdown" style="${utilVars.dropdownStyle}" value="${t}" onchange="${t=>{o(e=>({...e,[n]:t.target.value}))}}">
                ${e.map(e=>$`<option value="${e}">${e}</option>`)}
              </select>
            `}} ability="${e}" options=${t.standardScoreOptions} value=${t.abilityScores[e]} setValue=${t.setAbilityScores} />
              </div>
            `}} ability=${e} ...${t} />`)}
              </div>
            `}} ...${e} />
            ${Button("Roll D20",function(){a(e.setAdditionalText,e.standardAbilities)})}            
            ${Button("Correction",function(){e.addToAddtionalText(`
Remember that a poor Result below 10 should have negative consequenses and below 5 should be really bad. Also remember to always advance the story and offer interesting options. The options should always contain one related ability in paranthesis like (STR)`)})}
            `:""}function R(e){return $`
                <div 
                    id="toolBar" class="gpt-enhancer">
                    <${i} ...${e} />
                    <${function(e){if("CODE"==e.mode||"ALL"==e.mode)return $`
                ${Button("Toolwindow",function(){e.toggleToolWindow()})}
                ${Button("RunJS",A)}
                ${Button("Toggle Overlay",function(){e.toggleOverlay()})}
                ${Button("Correction",function(){e.addToAddtionalText(`When giving the answer, keep this in mind:
I am using Preact and Htm in this Bookmarklet code. The main app i the function TheApp and i want to keep most states in that parent 
Always do comments in the code like /*COMMENT HERE*/ never do // like //COMMENT HERE  `)})}
                ${Button("SendTest",function(){e.sendText("Tell me something interesting")})}
                `}} ...${e} />
                </div>
            `}o.id=t,document.body.appendChild(o),n($`<${e} />`,o)})})})})}();})();